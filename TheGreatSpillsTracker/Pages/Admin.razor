@page "/admin"
@using TheGreatSpillsTracker.Data
@using System.Security.Cryptography
@using System.Text
@inject SpillDataService spillService

<h2>Admin</h2>
<br />
<div class="form-group">
    <label for="passwordInput">Enter password to make changes</label>
    <input type="password" class="form-text text-muted mb-4" id="passwordInput" aria-describedby="password" @bind="Password" />
    <button type="button" class="btn btn-primary" @onclick="VerifyAuthentication">Authenticate</button>
</div>

@if (authed)
{
    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h3>Spills at Work</h3>
                </div>
                <div class="card-body">
                    <p>Last Spill: @spillService.GetSpill().EnterpriseSpillStringNonUTC()</p>
                    <p>Number of Spills: @spillService.GetSpill().EnterpriseSpillCount</p>
                    <button type="button" class="btn btn-primary" @onclick="NewSpillWork">Add Spill Now</button>
                    <button type="button" class="btn btn-primary" @onclick="resetWorkCount">Reset Spill Count</button>
                    <button type="button" class="btn btn-primary" @onclick="SetWorkNewRecord">Set as Record Spill</button>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h3>Spills at Home</h3>
                </div>
                <div class="card-body">
                    <p>Last Spill: @spillService.GetSpill().HomeSpillStringNonUTC()</p>
                    <p>Number of Spills: @spillService.GetSpill().HomeSpillCount</p>
                    <button type="button" class="btn btn-primary" @onclick="NewSpillHome">Add Spill Now</button>
                    <button type="button" class="btn btn-primary" @onclick="resetHomeCounter">Reset Spill Count</button>
                    <button type="button" class="btn btn-primary" @onclick="SetHomeNewRecord">Set as Record Spill</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    String Password = "";
    bool authed = false;

    public void VerifyAuthentication()
    {
        Console.WriteLine(hash(Password));
        if(spillService.GetSpill().PassHash == hash(Password))
        {
            authed = true;
            this.StateHasChanged();
        }
    }

    public void NewSpillHome()
    {
        if (!authed)
        {
            return;
        }
        spillService.AddHomeSpill();
        this.StateHasChanged();
    }

    public void NewSpillWork()
    {
        if (!authed)
        {
            return;
        }
        spillService.AddEnterpriseSpill();
        this.StateHasChanged();
    }

    public string hash(string str)
    {
        using (SHA1Managed sha1 = new SHA1Managed())
        {
            var hash = sha1.ComputeHash(Encoding.UTF8.GetBytes(str));
            var sb = new StringBuilder(hash.Length * 2);

            foreach (byte b in hash)
            {
                sb.Append(b.ToString("X2"));
            }
            string hi = sb.ToString();
            return sb.ToString();
        }
    }

    public void resetHomeCounter()
    {
        if (!authed)
        {
            return;
        }
        spillService.ResetHomeCount();
        this.StateHasChanged();
    }

    public void resetWorkCount()
    {
        if (!authed)
        {
            return;
        }
        spillService.ResetEnterpriseCount();
        this.StateHasChanged();
    }

    public void SetHomeNewRecord()
    {
        if(!authed)
        {
            return;
        }
        spillService.AddRecordSpill("home");
    }

    public void SetWorkNewRecord()
    {
        if(!authed)
        {
            return;
        }
        spillService.AddRecordSpill("work");
    }
}